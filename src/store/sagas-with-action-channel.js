// action-channel
// –∫–∞–Ω–∞–ª—ã –ø–æ–∑–≤–æ–ª—è—é—Ç –æ–±—â–∞—Ç—å—Å—è –º–µ–∂–¥—É —Å–∞–≥–∞–º–∏

import { USER_POSTS_FETCH_REQUESTED, USER_POSTS_FETCH_SUCCEEDED, USER_POSTS_FETCH_FAILED } from './actions';
import { call, put, actionChannel, take, getContext, setContext } from "redux-saga/effects";
import { buffers } from "redux-saga";
// import { getUserPosts } from "../api/posts"; // —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞

function* fetchUserPosts(action) {
    try {
        const postsApi = getContext('postsApi'); // –ø–µ—Ä–µ–¥–∞–µ–º –∫–ª—é—á –∫–æ—Ç–æ—Ä—ã–π –∑–∞–¥–∞–≤–∞–ª–∏ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        // const userPosts = yield call(getUserPosts, action.payload.userId);
        const userPosts = yield call(postsApi.getUserPosts, action.payload.userId); // —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
        const apiVersion = yield getContext("appVersion"); // –ø—Ä–æ—á–∏—Ç–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –∫–æ–Ω—Ç–µ–∫—Å—Ç
        console.log(apiVersion);

        yield put({
            type: USER_POSTS_FETCH_SUCCEEDED,
            payload: {
                data: userPosts,
            }
        })
    } catch (e) {
        yield put({
            type: USER_POSTS_FETCH_FAILED,
            payload: {
                messsage: e.messsage,
            }
        })
    }
}

// —Å–æ–∑–¥–∞–µ–º –∫–∞–Ω–∞–ª
// —Å–æ–∑–¥–∞–¥–∏–º –≤ App.js dispatch –ø–æ–≤—Ç–æ—Ä–Ω—ã—Ö —ç–∫—à–µ–Ω–æ–≤

// –æ–Ω –ø–æ–∑–æ–ª–∏—Ç –≤—ã–∑–≤–∞—Ç—å –∫–∞–∂–¥—ã–π call –¥–æ–∂–¥–∞—Ç—å—Å—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ
// –µ—Å–ª–∏ —Å–¥–µ–ª–∞—Ç—å slow 3g - –±—É–¥–µ—Ç –≤–∏–¥–Ω–æ —ç—Ç–æ
export function* userPostsFetchRequestedSaga() {
    // setContext - —Ä–∞—Å—à–∏—Ä—è–µ—Ç –∫–æ–Ω—Ç–µ–∫—Å—Ç, –Ω–µ –∑–∞–º–µ–Ω—è—è—è –µ–≥–æ
    yield setContext({
        appVersion: "1.0.0",
    });
    // const requestChannel = yield actionChannel(USER_POST_FETCH_REQUESTED);
    // –ï—Å–¥–∏ –º—ã –ø—Ä–∏–º–µ–Ω–∏–º buffers.none - –≤—ã–ø–æ–ª–Ω–∏—Ç—Å—è —Ç–æ–ª—å–∫–æ –æ–¥–Ω–∞ –∑–∞–¥–∞—á–∞ –≤ —ç–∫—à–µ–Ω–µ, –¥–ø—É–≥–∏–µ –æ—Ç–±—Ä–æ—Å—è—Ç—Å—è
    const requestChannel = yield actionChannel(USER_POSTS_FETCH_REQUESTED, buffers.none());

    while (true) {
        const action = yield take(requestChannel);
        console.log("üöÄ ~ file: sagas-with-action-channel.js ~ line 45 ~ function*userPostsFetchRequestedSaga ~ action", action)
        yield call(fetchUserPosts, action);
    }
}
