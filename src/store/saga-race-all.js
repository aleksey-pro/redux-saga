// –∫–æ–º–±–∏–Ω–∞—Ç–æ—Ä—ã —ç—Ñ—Ñ–µ–∫—Ç–æ–≤, –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω–∏–∏–µ –¥–ª—è –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω–æ–≥–æ –∑–∞–ø—É—Å–∫–∞ —Å–∞–≥
import { call, put, all, delay, race, take } from 'redux-saga/effects';
import {
	USER_POSTS_FETCH_REQUESTED,
	USER_POSTS_FETCH_SUCCEEDED,
	USER_POSTS_FETCH_FAILED,
	USER_POSTS_FETCH_CANCEL,
	SAVE_USER_ALBUMS,
	SAVE_USER_POSTS,
} from './actions';
import { getUserPosts } from '../api/posts';
import { getUserAlbums } from '../api/albums'

export function* fetchUserPosts(action) {
	console.log('üöÄ ~ file: saga-race-all.js ~ line 8 ~ function*fetchUserPosts ~ action', action);
	delay(1000);
	// const userPosts = yield call(getUserPosts, action.payload.userId); 
	const userPosts = yield call(getUserPosts, 1);
	yield put({
		type: USER_POSTS_FETCH_SUCCEEDED,
		payload: {
			data: userPosts,
		},
	});
	return userPosts;
}

//  race - –∑–∞–≤–µ—Ä—à–∞–µ—Ç—Å—è –∫–æ–≥–¥–∞ —Ö–æ—Ç—è –±—ã 1 –∏–∑ —Å–∞–≥ –≤—ã–ø–æ–ª–Ω—è–µ—Ç—Å—è
// –∏—Å–ø–æ–ª—å–∑—É–µ—é—Ç—Å—è –Ω–∞–ø—Ä–∏–º–µ—Ä, –º—ã —Ö–æ—Ç–∏–º –æ–≥—Ä–∞–Ω–∏—á–∏—Ç—å –≤—Ä–µ–º—è –∑–∞–ø—Ä–æ—Å–∞, –æ—Ç–º–µ–Ω–∏—Ç—å –¥—Ä—É–≥–∏–µ –¥—Ä—É–≥–∏–µ —Å–∞–≥–∏ –ø–æ –∫-–ª —Å–æ–±—ã—Ç–∏—é
export function* raceExampleWatcherSaga() {
	const action = take(USER_POSTS_FETCH_REQUESTED);
	console.log('üöÄ ~ file: saga-race-all.js ~ line 24 ~ function*raceExampleWatcherSaga ~ action', action);
	// const [ userPosts, userPostsCanceled ] = yield race([
	// 	fetchUserPosts(action),
	// 	//  –µ—Å–ª–∏ —ç—Ç–æ—Ç —ç–∫—à–µ–Ω –ø–æ—è–≤–∏—Ç—Å—è - –æ–Ω –æ—Ç–º–µ–Ω–∏—Ç fetchUserPosts
	// 	// —Ç–∫ –µ—Å–ª–∏ take –ø—Ä–æ–∏–∑–æ–π–¥–µ—Ç —Ä–∞–Ω—å—à–µ - –æ—Å—Ç–∞–ª—å–Ω—ã–µ –±—É–¥—É—Ç –æ—Ç–º–µ–Ω–µ–Ω—ã –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏
	// 	take(USER_POSTS_FETCH_CANCEL),
	// ]);

    const { userPosts, userPostsCanceled } = yield race({
		userPosts: fetchUserPosts(action),
		userPostsCanceled: take(USER_POSTS_FETCH_CANCEL),
    });
	// result
	console.log('üöÄ ~ file: saga-race-all.js ~ line 30 ~ function*raceExampleWatcherSaga ~ userPostsCanceled', userPostsCanceled);
	console.log('üöÄ ~ file: saga-race-all.js ~ line 30 ~ function*raceExampleWatcherSaga ~ userPosts', userPosts);
}


// all - –æ–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã—Ö –≤ –Ω–µ–≥–æ —Å–∞–≥


function* fetchAlbums(userId) {
    const data = yield call(getUserAlbums, userId)
    yield put({
      type: SAVE_USER_ALBUMS,
      payload: { data },
    })
    return data
  }
  function* fetchPosts(userId) {
    const data = yield call(getUserPosts, userId)
    yield put({
      type: SAVE_USER_POSTS,
      payload: { data },
    })
    return data
  }

export function* allExampleWatcherSaga() {
    const action = take(USER_POSTS_FETCH_REQUESTED);

    // –∏–ª–º –º–∞—Å—Å–∏–≤ –∫–∞–∫ –¥–ª—è race
    const { userPosts, userAlbums } = yield all({
        userPosts: fetchPosts(action.payload.userId),
        userAlbums: fetchAlbums(action.payload.userId),
    });
    console.log("üöÄ ~ file: saga-race-all.js ~ line 77 ~ function*allExampleWatcherSaga ~ userAlbums", userAlbums)
    console.log("üöÄ ~ file: saga-race-all.js ~ line 77 ~ function*allExampleWatcherSaga ~ userPosts", userPosts)
    

}

