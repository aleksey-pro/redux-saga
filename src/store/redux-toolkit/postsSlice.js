// –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è store –∏ redu—Åers –ø—Ä–∏ –ø–æ–º–æ—â–∏ reduxjs/toolkit

import { createSlice } from "@reduxjs/toolkit";

 const initialPostsState = {
    posts: null,
    albums: null,
    filesUploadingProgress: 0,
    isLoading: false,
}

const postsSlice = createSlice({
    name: 'posts',
    initialState: initialPostsState,
    reducers: {
        userPostsFetchRequest(state, action) {
            state.isLoading = true;
        },
        userPostsFetchSuccess(state, action) {
            console.log("üöÄ ~ file: postsSlice.js ~ line 18 ~ userPostsFetchSuccess ~ action", action)
            // –ø–æ–≤–∑–æ–ª—è–µ—Ç –Ω–µ –¥—É–º–∞—Ç—å –æ–± –∏–º–º—É—Ç–∞–±–µ–ª—å–Ω–æ—Å—Ç–∏!! –ø—Ä—è–º–æ push
            state.posts = action.payload;
            state.isLoading = false;
        },
        userPostsFetchFailed(state, action) {
            state.isLoading = false;
        }
    },
});

// actions - —Å–æ–∑–¥–∞—é—Ç—Å—è –°–ê–ú–ò –∏–∑ —Ä–µ–¥—å—é—Å–µ—Ä–∞!!!!
export const { userPostsFetchRequest, userPostsFetchSuccess, userPostsFetchFailed } = postsSlice.actions;

export default postsSlice.reducer;